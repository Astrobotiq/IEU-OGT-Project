//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/Main.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Main: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Main()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Main"",
    ""maps"": [
        {
            ""name"": ""Main Movement"",
            ""id"": ""c58493fe-1258-4e2a-bf7f-d3568e78d85e"",
            ""actions"": [
                {
                    ""name"": ""WSAD"",
                    ""type"": ""Value"",
                    ""id"": ""db0978f0-a613-4faa-a4e5-c7c4786196c1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""E"",
                    ""type"": ""Button"",
                    ""id"": ""c900570a-9afd-494e-a7b5-25083d6d9c29"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""Value"",
                    ""id"": ""e368b891-63e8-4334-be1b-97805c7a1547"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseLeft"",
                    ""type"": ""Button"",
                    ""id"": ""c2c6946b-de1a-43ca-a99a-7f497f1de470"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""fdb663e6-a04c-485d-b983-d1120c9b4c0c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WSAD"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""31890caf-ee56-48f8-83d6-ff507f30e757"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WSAD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1833269e-1986-4653-9b29-64a89b388863"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WSAD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3edf619c-50e0-4db9-b243-6a840f84af4d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WSAD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f347755b-81c4-417c-b670-17735ab9b736"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WSAD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""35a0f235-4c15-49e3-a715-af07a961500a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""E"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c857b66-0186-4057-bec0-69b4deffe5d4"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1559a8e2-424d-491e-8181-9b851b76d978"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Main Movement
        m_MainMovement = asset.FindActionMap("Main Movement", throwIfNotFound: true);
        m_MainMovement_WSAD = m_MainMovement.FindAction("WSAD", throwIfNotFound: true);
        m_MainMovement_E = m_MainMovement.FindAction("E", throwIfNotFound: true);
        m_MainMovement_Mouse = m_MainMovement.FindAction("Mouse", throwIfNotFound: true);
        m_MainMovement_MouseLeft = m_MainMovement.FindAction("MouseLeft", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main Movement
    private readonly InputActionMap m_MainMovement;
    private List<IMainMovementActions> m_MainMovementActionsCallbackInterfaces = new List<IMainMovementActions>();
    private readonly InputAction m_MainMovement_WSAD;
    private readonly InputAction m_MainMovement_E;
    private readonly InputAction m_MainMovement_Mouse;
    private readonly InputAction m_MainMovement_MouseLeft;
    public struct MainMovementActions
    {
        private @Main m_Wrapper;
        public MainMovementActions(@Main wrapper) { m_Wrapper = wrapper; }
        public InputAction @WSAD => m_Wrapper.m_MainMovement_WSAD;
        public InputAction @E => m_Wrapper.m_MainMovement_E;
        public InputAction @Mouse => m_Wrapper.m_MainMovement_Mouse;
        public InputAction @MouseLeft => m_Wrapper.m_MainMovement_MouseLeft;
        public InputActionMap Get() { return m_Wrapper.m_MainMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainMovementActions set) { return set.Get(); }
        public void AddCallbacks(IMainMovementActions instance)
        {
            if (instance == null || m_Wrapper.m_MainMovementActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MainMovementActionsCallbackInterfaces.Add(instance);
            @WSAD.started += instance.OnWSAD;
            @WSAD.performed += instance.OnWSAD;
            @WSAD.canceled += instance.OnWSAD;
            @E.started += instance.OnE;
            @E.performed += instance.OnE;
            @E.canceled += instance.OnE;
            @Mouse.started += instance.OnMouse;
            @Mouse.performed += instance.OnMouse;
            @Mouse.canceled += instance.OnMouse;
            @MouseLeft.started += instance.OnMouseLeft;
            @MouseLeft.performed += instance.OnMouseLeft;
            @MouseLeft.canceled += instance.OnMouseLeft;
        }

        private void UnregisterCallbacks(IMainMovementActions instance)
        {
            @WSAD.started -= instance.OnWSAD;
            @WSAD.performed -= instance.OnWSAD;
            @WSAD.canceled -= instance.OnWSAD;
            @E.started -= instance.OnE;
            @E.performed -= instance.OnE;
            @E.canceled -= instance.OnE;
            @Mouse.started -= instance.OnMouse;
            @Mouse.performed -= instance.OnMouse;
            @Mouse.canceled -= instance.OnMouse;
            @MouseLeft.started -= instance.OnMouseLeft;
            @MouseLeft.performed -= instance.OnMouseLeft;
            @MouseLeft.canceled -= instance.OnMouseLeft;
        }

        public void RemoveCallbacks(IMainMovementActions instance)
        {
            if (m_Wrapper.m_MainMovementActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMainMovementActions instance)
        {
            foreach (var item in m_Wrapper.m_MainMovementActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MainMovementActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MainMovementActions @MainMovement => new MainMovementActions(this);
    public interface IMainMovementActions
    {
        void OnWSAD(InputAction.CallbackContext context);
        void OnE(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnMouseLeft(InputAction.CallbackContext context);
    }
}
